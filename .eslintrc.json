{
    "root": true,
    "env": {
        "browser": true,
        "commonjs": true,
        "node": true,
        "es2021": true
    },
    "extends": [
        "airbnb",
        "airbnb-typescript",
        "airbnb/hooks",
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:eslint-comments/recommended",
        "plugin:import/errors",
        "plugin:import/warnings",
        "plugin:promise/recommended",
        "plugin:unicorn/recommended",
        "prettier"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "project": "./tsconfig.json",
        "sourceType": "module",
        "ecmaVersion": 12
    },
    "plugins": [
        "react",
        "@typescript-eslint",
        "prettier",
        "eslint-comments",
        "prefer-arrow",
        "promise",
        "unicorn",
        "no-null"
    ],
    "rules": {
        // Best Practices
        // eslint
        "class-methods-use-this": "off",
        "linebreak-style": "off", // Off to avoid conflicts with typescript-formatter
        "no-console": "off",
        "no-restricted-syntax": [
            "warn",
            "ForInStatement"
        ],
        "no-void": "off",
        "max-classes-per-file": "off",
        "max-len": [
            "warn",
            {
                "ignoreRegExpLiterals": false,
                "ignoreStrings": false,
                "code": 120
            }
        ],
        "no-var": "warn",
        "no-unused-vars": [
            "warn",
            {
                "varsIgnorePattern": "^_",
                "argsIgnorePattern": "^_"
            }
        ],
        "prefer-const": "warn",
        "no-eval": "warn",
        "semi": [
            "warn",
            "always"
        ],
        "eqeqeq": [
            "warn",
            "always"
        ],
        "indent": [
            "warn",
            2,
            {
                "SwitchCase": 1
            }
        ],
        
        // Stylistic Issues
        "no-trailing-spaces": "warn",
        "brace-style": "warn",
        "spaced-comment": [
            "warn",
            "always"
        ],
        
        // @typescript-eslint
        "@typescript-eslint/consistent-type-assertions": [
            "warn",
            {
                "assertionStyle": "as",
                "objectLiteralTypeAssertions": "never"
            }
        ],
        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-inferrable-types": "off",
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/explicit-member-accessibility": [
            "warn",
            {
                "accessibility": "no-public",
                "overrides": {
                    "parameterProperties": "explicit"
                }
            }
        ],
        "@typescript-eslint/explicit-function-return-type": [
            "warn",
            {
                "allowExpressions": true
            }
        ],
        "@typescript-eslint/no-parameter-properties": "off",
        "@typescript-eslint/no-unused-vars": [
            "warn",
            {
                "argsIgnorePattern": "^_",
                "varsIgnorePattern": "^_"
            }
        ],
        "@typescript-eslint/require-await": "off",
        "@typescript-eslint/restrict-template-expressions": "off",
        "@typescript-eslint/explicit-module-boundary-types": [
            "warn",
            {
                "allowArgumentsExplicitlyTypedAsAny": true
            }
        ],
        "@typescript-eslint/no-non-null-assertion": "off",
        // eslint-plugin-prefer-arrow
        "prefer-arrow/prefer-arrow-functions": [
            "warn",
            {
                "disallowPrototype": false,
                "singleReturnOnly": true,
                "classPropertiesAllowed": false
            }
        ],
        // eslint-plugin-unicorn
        "unicorn/filename-case": [
            "warn",
            {
                "cases": {
                    "camelCase": true,
                    "pascalCase": true
                }
            }
        ],
        "unicorn/no-null": "off",
        "unicorn/no-unsafe-regex": "warn",
        "unicorn/prevent-abbreviations": "off",
        "simple-import-sort/sort": "warn",
        
        // React
        "react/prop-types": "off",
        "react/display-name": "off",
        "react/react-in-jsx-scope": "off"
    }
}
